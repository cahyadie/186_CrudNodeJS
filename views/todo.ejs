<div class="container mt-5">
    <h1 class="text-center">Todo List</h1>

    <!-- Form to Add New Todo -->
    <form id="addTodoForm" class="my-4">
        <div class="input-group">
            <input type="text" id="newTask" class="form-control" placeholder="Add a new task..." required>
            <div class="input-group-append">
                <button type="submit" class="btn btn-primary">Add Task</button>
            </div>
        </div>
    </form>

    <!-- List of Todos -->
    <div id="todoList" class="d-flex flex-wrap justify-content-center">
        <% todos.forEach(todo => { %>
        <div class="card m-2">
            <div class="card-body d-flex flex-column justify-content-between" style="height: 200px;">
                <span class="<%= todo.completed ? 'completed' : '' %>">
                    <%= todo.task %>
                </span>
                <div class="mt-auto">
                    <button class="btn btn-sm btn-success mr-2 editBtn" data-id="<%= todo.id %>">Edit</button>
                    <button class="btn btn-sm btn-danger deleteBtn" data-id="<%= todo.id %>">Delete</button>
                </div>
            </div>
        </div>
        <% }); %>
    </div>

    <!-- Edit Todo Modal -->
    <div id="editModal" class="modal fade" tabindex="-1" aria-labelledby="editModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="editModalLabel">Edit Todo</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="editTodoForm">
                        <div class="form-group">
                            <label for="editTask">Task</label>
                            <input type="text" id="editTask" class="form-control" required>
                        </div>
                        <button type="submit" class="btn btn-primary mt-3">Save Changes</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function () {
        // Add new todo
        $('#addTodoForm').on('submit', function (e) {
            e.preventDefault();
            const task = $('#newTask').val().trim();
            if (task) {
                $.ajax({
                    url: '/todos',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify({ task: task }),
                    success: function (newTodo) {
                        location.reload(); // Reload to show the new todo
                    },
                    error: function (error) {
                        console.error("Error adding task:", error.responseText);
                    }
                });
            }
        });

        // Delete a todo
        $('.deleteBtn').on('click', function () {
            const id = $(this).data('id');
            $.ajax({
                url: '/todos/' + id,
                type: 'DELETE',
                success: function () {
                    location.reload(); // Reload to show updated list
                }
            });
        });

        // Show edit modal with the current task
        let editId;
        $('.editBtn').on('click', function () {
            editId = $(this).data('id');
            const currentTask = $(this).closest('.card-body').find('span').text();
            $('#editTask').val(currentTask);
            $('#editModal').modal('show');
        });

        // Update todo on form submission
        $('#editTodoForm').on('submit', function (e) {
            e.preventDefault();
            const task = $('#editTask').val().trim();
            if (task) {
                $.ajax({
                    url: '/todos/' + editId,
                    type: 'PUT',
                    data: JSON.stringify({ task: task, completed: false }),
                    contentType: 'application/json',
                    success: function () {
                        location.reload(); // Reload to show the updated todo
                    }
                });
            }
        });
    });
</script>
<style>

    body {
        background-color: #f8f9fa; /* Light background color */
    }

    .container {
        max-width: 800px; /* Limit the width of the container */
        margin: auto; /* Center the container */
    }

    h1 {
        color: #343a40; /* Darker color for the heading */
        margin-bottom: 20px; /* Space below the heading */
    }

    .card {
        border: 1px solid #dee2e6; /* Light border for the cards */
        border-radius: 0.5rem; /* Rounded corners */
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); /* Subtle shadow for depth */
        transition: transform 0.2s; /* Smooth hover effect */
        width: 200px; /* Fixed width for square shape */
        height: 200px; /* Fixed height for square shape */
        margin: 10px; /* Space around each card */
        display: flex; /* Flexbox for alignment */
        flex-direction: column; /* Stack items vertically */
        justify-content: space-between; /* Space between items */
    }

    .card:hover {
        transform: scale(1.05); /* Slightly enlarge the card on hover */
    }

    .completed {
        text-decoration: line-through; /* Strikethrough for completed tasks */
        color: #6c757d; /* Gray color for completed tasks */
    }

    .input-group {
        margin-bottom: 20px; /* Space below the input group */
    }

    .btn {
        border-radius: 0.25rem; /* Rounded button corners */
    }

    .modal-content {
        border-radius: 0.5rem; /* Rounded corners for modal */
    }

    .modal-header {
        background-color: #007bff; /* Blue header for the modal */
               color: white; /* White text for the modal header */
    }

    .modal-body {
        padding: 20px; /* Padding inside the modal body */
    }

    .form-control {
        border-radius: 0.25rem; /* Rounded corners for input fields */
    }

    /* Ensure the cards are displayed in a grid format */
    #todoList {
        display: flex; /* Use flexbox for layout */
        flex-wrap: wrap; /* Allow wrapping to the next line */
        justify-content: center; /* Center the cards */
    }

    /* Responsive design for smaller screens */
    @media (max-width: 768px) {
        .card {
            width: 150px; /* Adjust width for smaller screens */
            height: 150px; /* Adjust height for smaller screens */
        }
    }
</style>